@import 'base/typography';
@import './variables';

// Grid generator

@mixin grid-generator($columns) {
  float: left;
  margin-right: $grid__gutter;
  margin-bottom: $grid__gutter;
  width: ((100% - (($cols - 1) * $grid__gutter)) / $cols );
  &:nth-child(#{$cols}n) {
    margin-right: 0;
  }
}

@mixin all-grid-columns-generator(
    $i: 1,
    $list: '.#{col}-#{$i}'
) {
    @for $i from (1 + 1) through $grid__columns {
        $list: '#{$list}, .#{col}-#{$i}';
    }
    #{$list} {
        @include column-generator();
    }
}

// generate justify content classes

@mixin row-justify-generator($_class) {
    .#{$_class}--start {
        justify-content: flex-start;
    }
    .#{$_class}--center {
        justify-content: center;
    }
    .#{$_class}--end {
        justify-content: flex-end;
    }
    .#{$_class}--top {
        align-items: flex-start;
    }
    .#{$_class}--middle {
        align-items: center;
    }
    .#{$_class}--end {
        align-items: flex-end;
    }
    .#{$_class}--stretch {
        align-items: stretch;
    }
    .#{$_class}--reverse {
        flex-direction: row-reverse;
    }
    .#{$_class}--around {
        justify-content: space-around;
    }
    .#{$_class}--between {
        justify-content: space-between;
    }
}


@mixin column-generator() {
  padding: 0 ($grid__gutter / 2); // inner padding of each column
  min-height: 1px; // prevents collapsing when column is empty
}

@mixin loop-grid-columns($columns, $class, $width) {
    @for $i from 0 through $columns {
            .#{$class}-#{$i} {
            // background: red;
            flex-basis: percentage(($i / $grid__columns));
            max-width: percentage(($i / $grid__columns));
        }
    }
}

// Column class generator

@mixin create-grid-columns($_class) {
    @include loop-grid-columns($grid__columns, $_class, width);
    @include row-justify-generator('row');
}

// Buttons generator

@mixin btn-generator($btn-color, $btn-background) {
  background: $btn-background;
  color: $btn-color;
  &:hover {
    cursor: pointer;
    transition: all .3s ease-in-out;
  }
}

// Input fields generator

@mixin input-generator($input-background) {
  @include forLargeScreens('700px'){
    border: 1px solid $border-grey;
  }
  background: $input-background;
  padding: 0 1em;
}

// Youtube card generator

@mixin youtubeCard-generator() {
    display: flex;
    max-height: 9em;
    max-width: 25em;
}

@mixin youtubeThumbnail-generator($type:'') {
  height: auto;
  position: relative;
  img {
    height: 100%;
    object-fit: cover;
    width: 100%;
  }
  @if $type == 'channel' {
    img {
      border-radius: 50%;
      width: 7em;
    }
  }
  @else {
    img {
      height: 100%;
      object-fit: cover;
    }
  }
}

@mixin youtubeInfo-generator($type:'') {
  max-height: 4em;
    @if $type == 'channel' {
    align-self: center;
  }
  @else {

  }
  h1, h2, h3 {
   overflow: hidden;
   text-overflow: ellipsis;
   display: -webkit-box;
   line-height: 1.2em;
   -webkit-box-orient: vertical;
   font-weight: $font-weight-regular;
  }
  h1 {
   -webkit-line-clamp: 3;
   max-height: 3.6em;
   color: $black;
  }
  h2, h3 {
   -webkit-line-clamp: 1;
   max-height: 1.2em;
   font-size: 0.9em;
   color: $subtitle;
       &--playlist {
    color : $dark_grey;
    margin-top: 0.5em;
    font-size: 0.8em;
  }
  }
}

// Media queries generator

@mixin forLargeScreens($media) {
    @media (min-width: $media) { @content; }
}

// Clearfix

@mixin clearfix() {
  &:after {
    display: table;
    clear: both;
    content: '';
  }
}
